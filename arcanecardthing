import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.cards.AbstractCard.CardRarity;
import com.megacrit.cardcrawl.cards.AbstractCard.CardTarget;
import com.megacrit.cardcrawl.cards.AbstractCard.CardType;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.monsters.AbstractMonster;
import com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction;
import com.megacrit.cardcrawl.actions.utility.DrawCardAction;
import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
import com.megacrit.cardcrawl.powers.WeakPower;
import com.megacrit.cardcrawl.powers.VulnerablePower;

public class ArcaneTempestCard extends AbstractCard {
    private static final String ID = "ArcaneTempest";
    private static final String NAME = "Arcane Tempest";
    private static final String DESCRIPTION = "Deal 10 damage to ALL enemies. Apply 2 Weak and 2 Vulnerable to ALL enemies. Draw 1 card for each enemy damaged by this card.";
    private static final int COST = 2;
    private static final int DAMAGE = 10;
    private static final int WEAK_AMOUNT = 2;
    private static final int VULNERABLE_AMOUNT = 2;

    public ArcaneTempestCard() {
        super(ID, NAME, "path/to/card/image.png", COST, DESCRIPTION, CardType.SKILL, CardRarity.LEGENDARY, CardTarget.ALL_ENEMY);
        this.baseDamage = DAMAGE;
    }

    @Override
    public void use(AbstractPlayer player, AbstractMonster monster) {
        addToBot(new DamageAllEnemiesAction(player, this.multiDamage, this.damageTypeForTurn, AbstractGameAction.AttackEffect.LIGHTNING));
        addToBot(new ApplyPowerAction(player, player, new WeakPower(player, WEAK_AMOUNT, false)));
        addToBot(new ApplyPowerAction(player, player, new VulnerablePower(player, VULNERABLE_AMOUNT, false)));
        addToBot(new DrawCardAction(player, monster.getIntentBaseDmg())); // Draw 1 card for each enemy damaged
    }

    @Override
    public AbstractCard makeCopy() {
        return new ArcaneTempestCard();
    }

    @Override
    public void upgrade() {
        if (!this.upgraded) {
            upgradeName();
            upgradeDamage(3); // Upgrade damage by 3
        }
    }
}
